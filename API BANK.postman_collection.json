{
	"info": {
		"_postman_id": "68f03897-b67c-445c-a92a-53b3ad079617",
		"name": "API BANK",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10477344"
	},
	"item": [
		{
			"name": "List",
			"item": [
				{
					"name": "List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseSchema = {",
									"              \"type\": \"array\",",
									"                \"items\": {",
									"                \"type\": \"object\",",
									"                \"properties\": {",
									"                    \"id\": {",
									"                        \"type\": \"number\"",
									"                    },",
									"                    \"banco\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"estadoAtuacao\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"juros\": {",
									"                        \"type\": \"string\"",
									"                    }",
									"                    ",
									"                    ",
									"                }",
									"                }       ",
									"}",
									"",
									"// Get response data as JSON",
									"var jsonData = pm.response.json();",
									"",
									"// Test for response data structure",
									"pm.test('Validação da estrutura do JSON', function () {",
									"    var validation = tv4.validate(jsonData, responseSchema);",
									"    pm.expect(validation).to.be.true;",
									"});",
									"",
									"/*O teste é bem simples, estou utilizando a biblioteca tv4 para fazer a validação. Basicamente o que fazemos é salvar a resposta que recebemos em uma variável e depois utilizar a biblioteca para verificar se a resposta obedece o esquema que esperamos.*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJkZXNhZmlvIjoic2VyYXNhIn0.oOMv4kf9hKMtuatZEZJyESVu9Z7h6hGBwrZRJ-9HkCU",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8.mock.pstmn.io/bank",
							"protocol": "https",
							"host": [
								"8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8",
								"mock",
								"pstmn",
								"io"
							],
							"path": [
								"bank"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Full params",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 2000ms\", () => {",
									"  pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"/*teste de perfomance*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8.mock.pstmn.io/bank?id=1&banco&estadoAtuacao=&juros=",
							"protocol": "https",
							"host": [
								"8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8",
								"mock",
								"pstmn",
								"io"
							],
							"path": [
								"bank"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								},
								{
									"key": "banco",
									"value": null
								},
								{
									"key": "estadoAtuacao",
									"value": ""
								},
								{
									"key": "juros",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List with id param",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.ok;",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json;",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "https://8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8.mock.pstmn.io/bank?id=10",
							"protocol": "https",
							"host": [
								"8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8",
								"mock",
								"pstmn",
								"io"
							],
							"path": [
								"bank"
							],
							"query": [
								{
									"key": "id",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List with banco param",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8.mock.pstmn.io/bank?banco=Banco do Brasil",
							"protocol": "https",
							"host": [
								"8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8",
								"mock",
								"pstmn",
								"io"
							],
							"path": [
								"bank"
							],
							"query": [
								{
									"key": "banco",
									"value": "Banco do Brasil"
								}
							]
						}
					},
					"response": [
						{
							"name": "List with banco param",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8.mock.pstmn.io/bank?banco=Banco do Brasil",
									"protocol": "https",
									"host": [
										"8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8",
										"mock",
										"pstmn",
										"io"
									],
									"path": [
										"bank"
									],
									"query": [
										{
											"key": "banco",
											"value": "Banco do Brasil"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 21 Mar 2023 20:43:45 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=03d5b1ad1f6f1fbd"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=57fe42b26b5c08e9"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "120"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "117"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1679431430"
								},
								{
									"key": "ETag",
									"value": "W/\"4cd-R1RrKXHCHwG/PGjW/av0tSx3pWo\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"banco\": \"Banco do Brasil\",\n        \"estadoAtuacao\": \"SC\",\n        \"juros\": \"11,25%\"\n    },\n    {\n        \"id\": 2,\n        \"banco\": \"Caixa Econômica Federal\",\n        \"estadoAtuacao\": \"SP\",\n        \"juros\": \"10,75%\"\n    },\n    {\n        \"id\": 3,\n        \"banco\": \"Banco Santander\",\n        \"estadoAtuacao\": \"PR\",\n        \"juros\": \"13,00%\"\n    },\n    {\n        \"id\": 4,\n        \"banco\": \"Banco Itaú\",\n        \"estadoAtuacao\": \"SC\",\n        \"juros\": \"12,50%\"\n    },\n    {\n        \"id\": 5,\n        \"banco\": \"Banco Mercantil do Brasil\",\n        \"estadoAtuacao\": \"SC\",\n        \"juros\": \"11,50%\"\n    },\n    {\n        \"id\": 6,\n        \"banco\": \"Banco Safra\",\n        \"estadoAtuacao\": \"SP\",\n        \"juros\": \"12,50%\"\n    },\n    {\n        \"id\": 7,\n        \"banco\": \"Banco Bradesco\",\n        \"estadoAtuacao\": \"SC\",\n        \"juros\": \"12,50%\"\n    },\n    {\n        \"id\": 8,\n        \"banco\": \"Banco Inter\",\n        \"estadoAtuacao\": \"SP\",\n        \"juros\": \"10,50%\"\n    },\n    {\n        \"id\": 9,\n        \"banco\": \"Nubank\",\n        \"estadoAtuacao\": \"SC\",\n        \"juros\": \"10,75%\"\n    },\n    {\n        \"id\": 10,\n        \"banco\": \"Banco Original\",\n        \"estadoAtuacao\": \"SP\",\n        \"juros\": \"12,50%\"\n    }\n]"
						}
					]
				},
				{
					"name": "List with estadoAtuacao param",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Teste do status code",
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8.mock.pstmn.io/bank?estadoAtuacao=SC",
							"protocol": "https",
							"host": [
								"8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8",
								"mock",
								"pstmn",
								"io"
							],
							"path": [
								"bank"
							],
							"query": [
								{
									"key": "estadoAtuacao",
									"value": "SC"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List with juros param",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Teste do status code",
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8.mock.pstmn.io/bank?juros=11.25",
							"protocol": "https",
							"host": [
								"8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8",
								"mock",
								"pstmn",
								"io"
							],
							"path": [
								"bank"
							],
							"query": [
								{
									"key": "juros",
									"value": "11.25"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List with error juros param",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Teste de status de resposta",
									"pm.test(\"Status de resposta deve ser 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"// Teste de tipo de conteúdo",
									"pm.test(\"O tipo de conteúdo deve ser JSON\", function () {",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"// Teste de corpo de resposta",
									"pm.test(\"O corpo de resposta deve conter a chave 'error'\", function () {",
									"    pm.response.to.have.jsonBody(\"error\");",
									"});",
									"",
									"pm.test(\"O nome do erro deve ser URIError\", function () {",
									"    pm.expect(pm.response.json().error.name).to.eql(\"URIError\");",
									"});",
									"",
									"pm.test(\"A mensagem do erro deve ser 'The provided request parameter is invalid. Please sanitize the parameter before trying again.'\", function () {",
									"    pm.expect(pm.response.json().error.message).to.eql(\"The provided request parameter is invalid. Please sanitize the parameter before trying again.\");",
									"});",
									"",
									"pm.test(\"O parâmetro inválido deve ser '11.25%'\", function () {",
									"    pm.expect(pm.response.json().error.details.param).to.eql(\"11.25%\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8.mock.pstmn.io/bank?juros=11.25%",
							"protocol": "https",
							"host": [
								"8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8",
								"mock",
								"pstmn",
								"io"
							],
							"path": [
								"bank"
							],
							"query": [
								{
									"key": "juros",
									"value": "11.25%"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create a new bank",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Teste do status code",
							"pm.test(\"Status code é 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Check that it returns an array\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData).to.be.an(\"array\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \"banco\": \"TESTE\",\r\n    \"estadoAtuacao\": \"PE\",\r\n    \"juros\": \"5,00%\"\r\n}"
				},
				"url": {
					"raw": "https://8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8.mock.pstmn.io/bank",
					"protocol": "https",
					"host": [
						"8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8",
						"mock",
						"pstmn",
						"io"
					],
					"path": [
						"bank"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update bank",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status de resposta correto\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Retorno da mensagem de sucesso correta\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].mensagem).to.eql(\"Registro alterado com sucesso!\");",
							"});",
							"",
							"pm.test(\"Retorno do ID do banco correto\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[1].id).to.eql(1);",
							"});",
							"",
							"pm.test(\"Retorno do nome do banco correto\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[1].banco).to.eql(\"Banco do Brasil\");",
							"});",
							"",
							"pm.test(\"Retorno do estado de atuação correto\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[1].estadoAtuacao).to.eql(\"SP\");",
							"});",
							"",
							"pm.test(\"Retorno da taxa de juros correta\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[1].juros).to.eql(\"15,00%\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "7dcec2d2-2c39-49dd-8fae-2ab14e673a81",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1, \r\n    \"banco\": \"TESTE\",\r\n    \"estadoAtuacao\": \"PE\",\r\n    \"juros\": \"5,00%\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8.mock.pstmn.io/bank",
					"protocol": "https",
					"host": [
						"8dac9f4e-fcb2-4e8f-857a-e4ed3497a0d8",
						"mock",
						"pstmn",
						"io"
					],
					"path": [
						"bank"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJkZXNhZmlvIjoic2VyYXNhIn0.oOMv4kf9hKMtuatZEZJyESVu9Z7h6hGBwrZRJ-9HkCU\"",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"value": "",
			"type": "string",
			"disabled": true
		},
		{
			"key": "Token",
			"value": "\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJkZXNhZmlvIjoic2VyYXNhIn0.oOMv4kf9hKMtuatZEZJyESVu9Z7h6hGBwrZRJ-9HkCU\""
		}
	]
}